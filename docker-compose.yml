version: '3'

services:
  roscore:
    tty: true
    hostname: roscore
    image: "ros:${ROS_DISTRO}"
    command: ["roscore", "-p", "11311"]
    environment:
      ROS_MASTER_URI: "${ROS_MASTER_URI}"
      ROS_HOSTNAME: "${ROS_HOSTNAME}"
    ports:
      - "11311:11311"
    networks:
      - ros

  # simple example rosnode to connect to roscore
  # implements talker and listener
  listener:
    image: ros-catkin-self
    tty: true
    depends_on:
      - roscore
    environment:
      ROS_MASTER_URI: "${ROS_MASTER_URI}"
      ROS_HOSTNAME: "listener"
    command: ["/opt/catkin_ws/src/listen/run.sh"]
    # command: ["ping", "roscore"]
    volumes: 
      - ./volumes/listen:/opt/catkin_ws/src/listen
    networks:
      - ros

  talker:
    build:
      context: ./ros/docker
      dockerfile: Dockerfile
      args:
        ROS_DISTRO: "${ROS_DISTRO}"
    image: ros-catkin-self
    tty: true
    depends_on:
      - roscore
    environment:
      ROS_MASTER_URI: "${ROS_MASTER_URI}"
      ROS_HOSTNAME: "talker"
    command: ["/opt/catkin_ws/src/talk/run.sh"]
    volumes: 
      - ./volumes/talk:/opt/catkin_ws/src/talk
    networks:
      - ros

  # ROSnode running the webbridge
  rosbridge:
    image: ros-catkin-self
    tty: true
    depends_on:
      - roscore
    environment:
      ROS_MASTER_URI: "${ROS_MASTER_URI}"
      ROS_HOSTNAME: "rosbridge"
    networks:
      - ros
    command: ["/opt/catkin_ws/src/rosbridge/run.sh"]
    volumes: 
      - ./volumes/rosbridge:/opt/catkin_ws/src/rosbridge
    ports:
      - 8080:8080

  # core web bridge
  roslib:
    build:
      context: ./python/docker
      dockerfile: Dockerfile
      args:
        ROS_DISTRO: "${ROS_DISTRO}"
    image: python-roslibpy
    depends_on:
      - roscore
      - talker
      - rosbridge
    volumes: 
      - ./volumes/roslibpy:/roslibpy
    working_dir: "/roslibpy"
    command: ["python3", "-m", "pytest"]
    networks:
      - ros


networks:
  ros:
    driver: bridge
